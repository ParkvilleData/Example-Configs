include required(classpath("application"))

backend {
  default = spartan

  providers {
    spartan {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"                                                                                     
      config {
        runtime-attributes = """
        Int runtime_minutes = 60
        Int cpu = 1
        Int memory_mb = 4000
        String? docker
        """
        submit-docker = """
            # Ensure singularity is loaded if it's installed as a module

            module load Singularity/3.0.3-spartan_gcc-6.2.0 
            
            # remove any illegal characters from the docker digest
            docker_subbed=$(sed -e 's/[^A-Za-z0-9._-]/_/g' <<< ${docker})
            image=/data/cephfs/punim0755/containers/$docker_subbed.sif

            if [ ! -f "$image" ]; then
                singularity pull "$image" docker://${docker}
            fi
            
            # Submit the script to SLURM
            sbatch \
              -p physical \
              -J ${job_name}-cpu-${cpu}-mem-${memory_mb} \
              -D ${cwd} \
              -o ${cwd}/execution/stdout \
              -e ${cwd}/execution/stderr \
              -t ${runtime_minutes} \
              --mail-user="michael.franklin@petermac.org" \
              --mail-type=END \
              --cpus-per-task ${cpu} \
              --mem=${memory_mb} \
              --wrap "singularity exec --bind ${cwd}:${docker_cwd} $image ${job_shell} ${script}"
        """

        kill-docker = "scancel ${job_id}"
        check-alive = "squeue -j ${job_id}"
        job-id-regex = "Submitted batch job (\\d+).*"
      }
    }
  }
}
